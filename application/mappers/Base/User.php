<?php

/**
 * Mapper_Base_User
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $email
 * @property string $password
 * @property string $firstname
 * @property string $middle
 * @property string $lastname
 * @property string $sex
 * @property date $birth_date
 * @property string $street
 * @property string $house_number
 * @property string $zipcode
 * @property string $city
 * @property boolean $active
 * @property enum $account_type
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class Mapper_Base_User extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('user_users');
        $this->hasColumn('id', 'integer', null, array(
             'primary' => true,
             'autoincrement' => true,
             'type' => 'integer',
             ));
        $this->hasColumn('email', 'string', 64, array(
             'type' => 'string',
             'length' => '64',
             ));
        $this->hasColumn('password', 'string', 32, array(
             'type' => 'string',
             'length' => '32',
             ));
        $this->hasColumn('firstname', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('middle', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('lastname', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('sex', 'string', 1, array(
             'type' => 'string',
             'length' => '1',
             ));
        $this->hasColumn('birth_date', 'date', null, array(
             'type' => 'date',
             ));
        $this->hasColumn('street', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('house_number', 'string', 16, array(
             'type' => 'string',
             'length' => '16',
             ));
        $this->hasColumn('zipcode', 'string', 64, array(
             'type' => 'string',
             'length' => '64',
             ));
        $this->hasColumn('city', 'string', 64, array(
             'type' => 'string',
             'length' => '64',
             ));
        $this->hasColumn('active', 'boolean', null, array(
             'type' => 'boolean',
             ));
        $this->hasColumn('account_type', 'enum', null, array(
             'type' => 'enum',
             'values' => 
             array(
              0 => 'CLIENT',
              1 => 'PSYCHOLOGIST',
              2 => 'ADMIN',
             ),
             'default' => 'CLIENT',
             ));


        $this->index('unique_email', array(
             'fields' => 
             array(
              0 => 'email',
             ),
             'type' => 'unique',
             ));
        $this->index('account_type', array(
             'fields' => 
             array(
              0 => 'account_type',
             ),
             ));
        $this->option('type', 'INNODB');
        $this->option('collate', 'utf8_general_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        
    }
}